---
title: "上机 2"
author: "何子欣"
format: html
editor: visual
---

# Package Installation

```         
```

```{r}
library(tidyverse)
library(broom)
library(ggplot2)
library(olsrr)
library(rgl)
library(dplyr)
options(digits = 6,scipen = 999)
```

## Reading the data

Before regression,firstly we need to read data and make some necessary data processing.

```{r}
# 读取senic附录文件
data_145 <- read.table("/Users/hezixin/Downloads/APPENC01.txt",
                       header = FALSE,
                       col.names = c("id_num", "length_of_stay", "age",
                                     "infection_risk",
                                     "routine_culturing_ratio",
                                     "routine_chest_Xray_ratio",
                                     "num_of_beds",
                                     "medical_school_affiliation","region",
                                     "aver_daily_census", "num_of_nurses",
                                     "available_facilities"))

head(data_145)
str(data_145)
```

## 1.45(a) First-order regression

Refer to the SENIC data set in Appendix c.l. Regress average length of stay in a hospital (Y) on infection risk, available facilities and services, and routine chest X-ray ratio.

1.Y:average length of stay ; X:infection risk

```{r}
#回归
model_1 <- lm(length_of_stay ~ infection_risk, data = data_145)
tidy(model_1) 
```

$y= 6.3367 + 0.7604 * x$

2.Y:average length of stay ; X:available facilities and services

```{r}
model_2 <- lm(length_of_stay ~ available_facilities, data = data_145)
tidy(model_2)  # 查看模型摘要
```

$y= 7.7187 + 0.0447 * x$

3.Y:average length of stay ; X:routine chest X-ray ratio

```{r}
model_3 <- lm(length_of_stay ~ routine_chest_Xray_ratio, data = data_145)
tidy(model_3)  # 查看模型摘要
```

$y= 6.5663 + 0.0377 * x$

## 1.45b Plot lines and data

### Data preparation

Make data frame on each three funtion.

```{r}
# 创建数据框用于绘图
data1 <- data.frame(infection_risk = data_145$infection_risk,
                    length_of_stay = data_145$length_of_stay)

data2 <- data.frame(available_facilities = data_145$available_facilities,
                    length_of_stay = data_145$length_of_stay)

data3 <- data.frame(routine_chest_Xray_ratio =
                      data_145$routine_chest_Xray_ratio,
                    length_of_stay = data_145$length_of_stay)
```

### Plot the data and funtion

```{r}
# 使用ggplot绘制散点图和拟合线
ggplot(data1, aes(x = infection_risk, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")

# 对data2和data3重复上述绘图步骤
ggplot(data2, aes(x = available_facilities, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")

ggplot(data3, aes(x = routine_chest_Xray_ratio, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")
```

According to graphs,the linear relation do appear to provide a good fit for each of the three predictor variables.

## 1.45c MSE Calculation

MSE = SSE / n-p

### Residual Calculation

```{r}
# 计算残差
fitted_model1 <- predict(model_1)
fitted_model2 <- predict(model_2)
fitted_model3 <- predict(model_3)
res1 <- data_145$length_of_stay - fitted_model1
res1 <- data.frame(res1 = res1)

res2 <- data_145$length_of_stay - fitted_model2
res2 <- data.frame(res2 = res2)

res3 <- data_145$length_of_stay - fitted_model3
res3 <- data.frame(res3 = res3)
```

### SSE&MSE Caculation

```{r}
# 计算MSE
mse_model1 <- sum((res1$res1)^2) / (length(data_145$length_of_stay)-2)
mse_model2 <- sum((res2$res2)^2) / (length(data_145$length_of_stay)-2)
mse_model3 <- sum((res3$res3)^2) / (length(data_145$length_of_stay)-2)

# 打印MSE结果
mse_model1
mse_model2
mse_model3
```

The risk of infection shows the smallest varaiability.

## 1.46(a) First-order regression with regions

### Data preparation

```{r}
#筛选数据
data_region_1 <- filter(data_145, region == 1)
data_region_2 <- filter(data_145, region == 2)
data_region_3 <- filter(data_145, region == 3)
data_region_4 <- filter(data_145, region == 4)
```

### Region Regression

```{r}
#模型回归与展示
model_region1 <- lm(data_region_1$length_of_stay ~ data_region_1$infection_risk)
model_region2 <- lm(data_region_2$length_of_stay ~ data_region_2$infection_risk)
model_region3 <- lm(data_region_3$length_of_stay ~ data_region_3$infection_risk)
model_region4 <- lm(data_region_4$length_of_stay ~ data_region_4$infection_risk)
tidy(model_region1)
tidy(model_region2)
tidy(model_region3)
tidy(model_region4)
```

$$y = 4.537921 + 1.347756 *x$$

$$y = 7.5605062 + 0.4831707 *x$$

$$y = 7.1293374 + 0.5250827 *x$$

$$y = 8.03804816 + 0.01727859 * x$$

## 1.46(b)

```{r}
# 使用ggplot绘制散点图和拟合线
ggplot(data_region_1, aes(x = infection_risk, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")

# 重复上述绘图步骤
ggplot(data_region_2, aes(x = infection_risk, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")

ggplot(data_region_3, aes(x = infection_risk, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")

ggplot(data_region_4, aes(x = infection_risk, y = length_of_stay)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, col = "blue")
```

The fitted lines of region 1，2 and 3 have high similarity.However,the last one nearly parallels to the axis of x.

## 1.46(c) MSE Calculation

```{r}
#region 1
fitted_region1 <- predict(model_region1)
res_region1 <- data_region_1$length_of_stay - fitted_region1
mse_region1 <- sum((res_region1)^2) / length(data_region_1$length_of_stay)
```

```{r}
#region2
fitted_region2 <- predict(model_region2)
res_region2 <- data_region_2$length_of_stay - fitted_region2
mse_region2 <- sum((res_region2)^2) / length(data_region_2$length_of_stay)
```

```{r}
#region3
fitted_region3 <- predict(model_region3)
res_region3 <- data_region_3$length_of_stay - fitted_region3
mse_region3 <- sum((res_region3)^2) / length(data_region_3$length_of_stay)
```

```{r}
#region4
fitted_region4 <- predict(model_region4)
res_region4 <- data_region_4$length_of_stay - fitted_region4
mse_region4 <- sum((res_region4)^2) / length(data_region_4$length_of_stay)
```

### Results Presentation

```{r}
mse_region1
mse_region2
mse_region3
mse_region4
```

The variability around the fitted regression line is approximately the same for the four regions.

## 2.64 R2 as the criterion

### R Squared Calculation

```{r}
#2.64
glance(model_1)
#Multiple R-squared:  0.2846,	Adjusted R-squared:  0.2781 
glance(model_2)
#Multiple R-squared:  0.1264,	Adjusted R-squared:  0.1185 
glance(model_3)
#Multiple R-squared:  0.1463,	Adjusted R-squared:  0.1386 
```

The risk of infection accounts for the largest reduction in the variability of the average length of stay.

## 2.65 Confidence Estimation of Beta

```{r}
#region1
# 计算参数的95%置信区间
conf_265_r1 <- confint(model_region1, level = 0.95)
conf_265_r1_beta1 <- conf_265_r1["data_region_1$infection_risk",]
conf_265_r1_beta1
```

```{r}
#region2
# 计算参数的95%置信区间
conf_265_r2 <- confint(model_region2, level = 0.95)
conf_265_r2_beta1 <- conf_265_r2["data_region_2$infection_risk",]
conf_265_r2_beta1
```

```{r}
#region3
# 计算参数的95%置信区间
conf_265_r3 <- confint(model_region3, level = 0.95)
conf_265_r3_beta1 <- conf_265_r3["data_region_3$infection_risk",]
conf_265_r3_beta1
```

```{r}
#region4
# 计算参数的95%置信区间
conf_265_r4 <- confint(model_region4, level = 0.95)
conf_265_r4_beta1 <- conf_265_r4["data_region_4$infection_risk",]
conf_265_r4_beta1
```

## 3.27a Residuals Analysis

### Residuals Presentation

```{r}
res1
res2
res3
```

### Data Preparation for Residual Plot

```{r}
data_res1 <- cbind(infection_risk,res1)
data_res2 <- cbind(infection_risk,res2)
Xray <- data_145[,"routine_chest_Xray_ratio"]
Xray <- data.frame(Xray)
data_res3 = cbind(Xray,res3)
```

### Residual Plot

```{r}
#model1
ggplot(data_res1, aes(x = infection_risk, y = res1)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "infection_risk", y = "Residuals", title = "Residuals vs Infection Risk") +
  theme_minimal()

#model2
data_res2 <- cbind(infection_risk,res2)
ggplot(data_res2, aes(x = available_facilities, y = res2)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Available Facilities", y = "Residuals", title = "Residuals vs Available Facilities") +
  theme_minimal()

#model3
ggplot(data_res3, aes(x = Xray, y = res3)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Routine Chest X-ray Ratio", y = "Residuals", title = "Residuals vs Routine Chest X-ray Ratio") +
  theme_minimal()
```

### QQ Plot

```{r}
ols_plot_resid_qq(model_1)
ols_plot_resid_qq(model_2)
ols_plot_resid_qq(model_3)
```

Observing QQ plots relatively,each graphs presents its own systematic deviation,which means the three funtions need revision.Therefor,Linear regression model (2.1) does not show more appropriately in one case than in the others.

## 3.27b Regression & Estimation

### Data processing

```{r}
# 创建新的数据框，去除第47行和第112行
data_327 <- data_145[-c(47, 112), ]
```

### Regression

```{r}
# 创建新的模型
model_dele <- lm(length_of_stay ~ infection_risk, data = data_327)
tidy(model_dele)
```

### 3.27b Obtain 95% Prediction Intervals For New Y at X = 6.5 and X = 5.9

```{r}
#New Y
new_data <- data.frame(infection_risk=c(5.9,6.5))

# 使用predict函数进行预测
predicted_value <- predict(model_dele, new_data,interval = "prediction")

# 输出预测值
print(predicted_value)
```

The observations of Y47 and Y112 do fall outside these prediction intervals,which means the two values may be the outliers.

## 3.28 Residuals Analysis of 4 regions

### Residuals Results Revealation

```{r}
res_r1 <- data.frame(res_r1)
res_r2 <- data.frame(res_r2)
res_r3 <- data.frame(res_r3)
res_r4 <- data.frame(res_r4)
res_r1
res_r2
res_r3
res_r4
```

### Data Preparation

```{r}
#3,28
infection_risk_r1 <- data_region_1$infection_risk
infection_risk_r2 <- data_region_2$infection_risk
infection_risk_r3 <- data_region_3$infection_risk
infection_risk_r4 <- data_region_4$infection_risk

# 创建数据框
data_region1_res <- cbind(infection_risk_r1, res_r1)
data_region2_res <- cbind(infection_risk_r2, res_r2)
data_region3_res <- cbind(infection_risk_r3, res_r3)
data_region4_res <- cbind(infection_risk_r4, res_r4)
```

### Residual Plot

```{r}
# 绘制图表
ggplot(data_region1_res, aes(x = infection_risk_r1, y = res_r1)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Infection Risk", y = "Residuals", title = "Region 1: Residuals vs Infection Risk") +
  theme_minimal()

ggplot(data_region2_res, aes(x = infection_risk_r2, y = res_r2)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Infection Risk", y = "Residuals", title = "Region 2: Residuals vs Infection Risk") +
  theme_minimal()

ggplot(data_region3_res, aes(x = infection_risk_r3, y = res_r3)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Infection Risk", y = "Residuals", title = "Region 3: Residuals vs Infection Risk") +
  theme_minimal()

ggplot(data_region4_res, aes(x = infection_risk_r4, y = res_r4)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Infection Risk", y = "Residuals", title = "Region 4: Residuals vs Infection Risk") +
  theme_minimal()
```

### QQ Plot

```{r}
#qq图绘图
ols_plot_resid_qq(model_region1)
ols_plot_resid_qq(model_region2)
ols_plot_resid_qq(model_region3)
ols_plot_resid_qq(model_region4)
```

Four regions do not display similar error variances.

Other conclusions：It seems region 2 reflects the best.

## 6.30a Stem-and-leaves Plot

### Data Classification

```{r}
# 提取各列的向量
modeli_x1 <- as.numeric(data_145$age)
modeli_x2 <- as.numeric(data_145$infection_risk)
modeli_x3 <- as.numeric(data_145$available_facilities)
modelii_x1 <- as.numeric(data_145$num_of_beds)
```

### Plotting

```{r}
# 绘制茎叶图
stem(modeli_x1)
stem(modeli_x2)
stem(modeli_x3)
stem(modelii_x1)
```

Infor：The age of 52,the infection risk of 4 records the most frequencies.

## 

## 6.30b Obtain the scatter plot matrix and correlation matrix

### Plotting

```{r}
#age
data_145 %>% ggplot(aes(x=modeli_x1,y=length_of_stay))+
  geom_point(pch=20)+
  labs(title = "x1与y的散点图")

#infection_risk
data_145 %>% ggplot(aes(x=modeli_x2,y=length_of_stay))+
  geom_point(pch=20)+
  labs(title = "x2与y的散点图")

#availablefacilities and services
data_145 %>% ggplot(aes(x=modeli_x3,y=length_of_stay))+
  geom_point(pch=20)+
  labs(title = "x3与y的散点图")

#num_of_beds
data_145 %>% ggplot(aes(x=modelii_x1,y=length_of_stay))+
  geom_point(pch=20)+
  labs(title = "x4与y的散点图")
```

### Correlation

```{r}
#model1
data_modeli <- data.frame(cbind(modeli_x1,modeli_x2,modeli_x3))
cor_matrix_modeli <- cor(data_modeli)
cor_matrix_modeli
#model2
data_modelii <- data.frame(cbind(modelii_x1,modeli_x2,modeli_x3))
cor_matrix_modelii <- cor(data_modelii)
cor_matrix_modelii
```

Findings:Observing the scatter plot,the four predictor above mentioned all exist their linear relation with y.Through the correlation matrix,the three predictors in model ii displays stronger ties among themselves than those three in model i.

## 

## 6.30c fit first-order regression model (6.5) with three predictors

```{r}
#modeli
modeli <- lm(length_of_stay ~ modeli_x1 + modeli_x2 + modeli_x3)
tidy(modeli)
#modelii
modelii <- lm(length_of_stay ~ modelii_x1 + modeli_x1 + modeli_x3)
tidy(modelii)
```

## 6.30d R square calculation

```{r}
#求model1.r方
broom::glance(modeli)
#Multiple R-squared:  0.3448,	Adjusted R-squared:  0.3267 
#求model2.r方
broom::glance(modelii)
#Multiple R-squared:  0.2153,	Adjusted R-squared:  0.1937 
```

Compared with r square above,model 1 is more preferable to use.

## 6.30e Residual Analysis & Model Comparison

### Residuals Calculation

```{r}
#求残差
res_modeli <- data.frame(residuals(modeli))
res_modelii <- data.frame(residuals(modelii))
res_modeli
res_modelii
```

### Data Preparation

```{r}
modeli_fitted <- data.frame(predict(modeli))
modelii_fitted <- data.frame(predict(modelii))
data_model_res <- data.frame(modeli_fitted,modelii_fitted,
                              res_modeli,res_modelii,
                             modeli_x1,modeli_x2,modeli_x3,modelii_x1)
data_model_res
```

### Plotting against Y_HAT

```{r}
#model 1
ggplot(data_model_res, aes(x = predict.modeli., y = residuals.modeli. )) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "model_1_yhat", y = "Residuals", 
       title = "Residuals vs mdoel_1_fitted") +
  theme_minimal()

#model2
ggplot(data_model_res, aes(x = predict.modelii., y = residuals.modelii. )) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "model_2_yhat", y = "Residuals", 
       title = "Residuals vs mdoel_2_fitted") +
  theme_minimal()
```

### Plotting against each three predictors

```{r}
#model 1
ggplot(data_model_res, aes(x = modeli_x1, y = residuals.modeli.)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Age", y = "Residuals", 
       title = "Residuals vs Age") +
  theme_minimal()

ggplot(data_model_res, aes(x = modeli_x2, y = residuals.modeli.)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Infection Risk", y = "Residuals", 
       title = "Residuals vs Infection Risk") +
  theme_minimal()

ggplot(data_model_res, aes(x = modeli_x3, y = residuals.modeli.)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Available facilities", y = "Residuals", 
       title = "Residuals vs Available facilities") +
  theme_minimal()

#model 2
ggplot(data_model_res, aes(x = modelii_x1, y = residuals.modelii.)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Num of beds", y = "Residuals", 
       title = "Residuals vs Num of beds") +
  theme_minimal()

ggplot(data_model_res, aes(x = modeli_x2, y = residuals.modelii.)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Infection Risk", y = "Residuals", 
       title = "Residuals vs Infection Risk") +
  theme_minimal()

ggplot(data_model_res, aes(x = modeli_x3, y = residuals.modelii.)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Available facilities", y = "Residuals", 
       title = "Residuals vs Available facilities") +
  theme_minimal()
```

### Plotting against two_factor interaction terms

```{r}
#绘制两因素交互项的关系(model1)
ggplot(data_model_res,aes(x=modeli_x1*modeli_x2,y=residuals.modeli.))+
  geom_point()+
  labs(x="x1和x2的交互项",y="residuals")+
  geom_hline(yintercept = 0,linetype="dashed")

ggplot(data_model_res,aes(x=modeli_x1*modeli_x3,y=residuals.modeli.))+
  geom_point()+
  labs(x="x1和x3的交互项",y="residuals")+
  geom_hline(yintercept = 0,linetype="dashed")

ggplot(data_model_res,aes(x=modeli_x2*modeli_x3,y=residuals.modeli.))+
  geom_point()+
  labs(x="x2和x3的交互项",y="residuals")+
  geom_hline(yintercept = 0,linetype="dashed")

#绘制两因素交互项的关系(model2)
ggplot(data_model_res,aes(x=modelii_x1*modeli_x2,y=residuals.modelii.))+
  geom_point()+
  labs(x="x1和x2的交互项",y="residuals")+
  geom_hline(yintercept = 0,linetype="dashed")

ggplot(data_model_res,aes(x=modelii_x1*modeli_x3,y=residuals.modelii.))+
  geom_point()+
  labs(x="x1和x3的交互项",y="residuals")+
  geom_hline(yintercept = 0,linetype="dashed")

ggplot(data_model_res,aes(x=modeli_x2*modeli_x3,y=residuals.modelii.))+
  geom_point()+
  labs(x="x2和x3的交互项",y="residuals")+
  geom_hline(yintercept = 0,linetype="dashed")
```

### Normal QQ Plot

```{r}
#model1的qq图
ols_plot_resid_qq(modeli)
#model2的qq图
ols_plot_resid_qq(modelii)
```

Conclusion：From the residual plots and the each slope of normal qq plots,two models do not show too much difference on its performance.

## 6.31a Use first-order regression model (6.5) with four predictors

```{r}
#region1
model_r1_631 <- lm(infection_risk ~ age + routine_culturing_ratio +
                     aver_daily_census+available_facilities,data = data_region_1)
#region2
model_r2_631 <- lm(infection_risk ~ age + routine_culturing_ratio +
                     aver_daily_census+available_facilities,data = data_region_2)
#region3
model_r3_631 <- lm(infection_risk ~ age + routine_culturing_ratio +
                     aver_daily_census+available_facilities,data = data_region_3)
#region4
model_r4_631 <- lm(infection_risk ~ age + routine_culturing_ratio +
                     aver_daily_census+available_facilities,data = data_region_4)

tidy(model_r1_631)
tidy(model_r2_631)
tidy(model_r3_631)
tidy(model_r4_631)
```

Statement:

$$y_r1 =  -3.3496 + 0.117 *x1 + 0.0582 *x2 + 0.0015 * x3 + 0.0066 * x4 $$

$$y_r2 =  -2.2915 + 0.0047 *x1 + 0.058 *x2 + 0.0012 * x3 + 0.015 * x4 $$

$$y_r3 =  -0.1439 + 0.0308 *x1 + 0.1023 *x2 + 0.0041 * x3 + 0.0080 * x4 $$ $$y_r4 =  1.5665 + 0.0352 *x1 + 0.0403 *x2 - 0.0007 * x3 + 0.0128 * x4 $$

## 6.31b Comparison

Compared with the four funtions ,the estimated regression functions are similar for the four regions which can be seen from their coefficients.

## 6.32c Calculation of MSE and R2 for each region.

### MSE

```{r}
#mse
fitted_modelr1_631 <- predict(model_r1_631)
fitted_modelr2_631 <- predict(model_r2_631)
fitted_modelr3_631 <- predict(model_r3_631)
fitted_modelr4_631 <- predict(model_r4_631)
#region1
sse_r1_631 <- sum((data_region_1$infection_risk - fitted_modelr1_631)^2)
MSE_r1_631 <- sse_r1_631 / (length(data_region_1$infection_risk) - 5)

#region2
sse_r2_631 <- sum((data_region_2$infection_risk - fitted_modelr2_631)^2)
MSE_r2_631 <- sse_r2_631 / (length(data_region_2$infection_risk) - 5)

#region3
sse_r3_631 <- sum((data_region_3$infection_risk - fitted_modelr3_631)^2)
MSE_r3_631 <- sse_r3_631 / (length(data_region_3$infection_risk) - 5)

#region4
sse_r4_631 <- sum((data_region_4$infection_risk - fitted_modelr4_631)^2)
MSE_r4_631 <- sse_r4_631 / (length(data_region_4$infection_risk) - 5)

MSE_r1_631
MSE_r2_631
MSE_r3_631
MSE_r4_631
```

### R squared

```{r}
glance(model_r1_631)
glance(model_r2_631)
glance(model_r3_631)
glance(model_r4_631)
```

Discussion:Not similar even presents a lot difference.

## 6.31d Obtain the residuals and prepare box plot

### Residuals Extraction

```{r}
#region1
res_r1_631 <- data.frame(fitted_modelr1_631 - data_region_1$infection_risk)
#region2
res_r2_631 <- data.frame(fitted_modelr2_631 - data_region_2$infection_risk)
#region3
res_r3_631 <- data.frame(fitted_modelr3_631 - data_region_3$infection_risk)
#region4
res_r4_631 <- data.frame(fitted_modelr4_631 - data_region_4$infection_risk)
res_r1_631
res_r2_631
res_r3_631
res_r4_631
```

### Box-plot

```{r}
#从上到下分别是region1，2，3，4
boxplot(res_r1_631)
boxplot(res_r2_631)
boxplot(res_r3_631)
boxplot(res_r4_631)
```

findings：The residuals of four regions all have the median nearly to 0. The range all control at (-2,2),which means the model all have good performance.Btw,the residuals of region 2 records the largest range.

## 7.38 Calculate the coefficient of partial determination

## Background Preparation

```{r}
#model with x1,x2
model_738_basic <- lm(length_of_stay ~ age + infection_risk , data = data_145)
tidy(model_738_basic)
sse_x1x2=278.250
```

```{r}
#model with x1,x2,x3
model_738_x3 <- lm(length_of_stay ~ age + infection_risk + routine_culturing_ratio,
                   data = data_145)
sse_x1x2x3=275.002
#model with x1,x2,x4
model_738_x4 <- lm(length_of_stay ~ age + infection_risk + aver_daily_census,
                   data = data_145)
sse_x1x2x4=240.352
#model with x1,x2,x5
model_738_x5 <- lm(length_of_stay ~ age + infection_risk + num_of_nurses,
                   data = data_145)
sse_x1x2x5=267.853
#model with x1,x2,x6
model_738_x6 <- lm(length_of_stay ~ age + infection_risk + available_facilities,
                   data = data_145)
sse_x1x2x6=268.125
```

## Calculation by sse

```{r}
r_y3_12 <- (sse_x1x2 - sse_x1x2x3)/sse_x1x2
r_y3_12
r_y4_12 <- (sse_x1x2 - sse_x1x2x4)/sse_x1x2
r_y4_12
r_y5_12 <- (sse_x1x2 - sse_x1x2x5)/sse_x1x2
r_y5_12
r_y6_12 <- (sse_x1x2 - sse_x1x2x6)/sse_x1x2
r_y6_12
```

## 7.38b Comparison & the extra sum of squares

By comparison,the infection risk displays the best results.

### Extra sum of squares

```{r}
extra_ssr_x4_after_x1x2 <- sse_x1x2-sse_x1x2x4
extra_ssr_x3_after_x1x2 <- sse_x1x2-sse_x1x2x3
extra_ssr_x5_after_x1x2 <- sse_x1x2-sse_x1x2x5
extra_ssr_x6_after_x1x2 <- sse_x1x2-sse_x1x2x6
extra_ssr_x4_after_x1x2
extra_ssr_x3_after_x1x2
extra_ssr_x5_after_x1x2
extra_ssr_x6_after_x1x2
```

The extra sum of squares associated with infection risk is also larger than those for the other variables.

## 7.38c F-test & F statistics comparison

### F Test

```         
                               $H_0 : beta4 = 0$
```

### $H_1 : beta4 =! 0$

```{r}
alpha = 0.05
model_summary_x4 <- summary(model_738_x4)
model_summary_x4

# 检查F统计量和对应的p值
f_value <- model_summary_x4$fstatistic[1] # F统计量的值
f_df1 <- model_summary_x4$fstatistic[2]   # 分子自由度
f_df2 <- model_summary_x4$fstatistic[3]   # 分母自由度
f_pvalue <- pf(f_value, 3, 109, lower.tail = FALSE) # 计算p值

# 输出F检验结果
cat("F统计量值:", f_value, "\n分子自由度:", 1, 
    "\n分母自由度:", length(length_of_stay)-1, "\np值:", f_pvalue, "\n")

cat("在alpha = 0.05的水平下，模型的总体F检验是显著的。我们拒绝原假设。")
```

### F statistics comparison

```{r}
#x3的f统计量
model_summary_x3 <- summary(model_738_x3)

# 检查F统计量和对应的p值
f_value_x3 <- model_summary_x3$fstatistic[1] # F统计量的值

#x5的f统计量
model_summary_x5 <- summary(model_738_x5)

# 检查F统计量和对应的p值
f_value_x5 <- model_summary_x5$fstatistic[1] # F统计量的值

#x6的f统计量
model_summary_x6 <- summary(model_738_x6)

# 检查F统计量和对应的p值
f_value_x6 <- model_summary_x6$fstatistic[1] # F统计量的值

f_value
f_value_x3
f_value_x5
f_value_x6
```

The f statistics of x4 is the largest.

## 

## 8.38a Fit the second-order regression model. Plot the residuals against the fitted values.

## Second-order Regression

```{r}
#中心化
num_of_nurses_fitted <- data_145$num_of_nurses - mean(data_145$num_of_nurses)
available_facilities_fitted <- data_145$available_facilities - 
  mean(data_145$available_facilities)
#回归
model_838 <- lm(num_of_nurses_fitted ~ poly(available_facilities_fitted, 2),
                data = data_145)
tidy_838 <- tidy(model_838)
tidy_838
```

## Plot the residuals against the fitted values

```{r}
ols_plot_resid_fit(model_838, print_plot = TRUE)
```

The residuals mostly locate in the range of （-200，200），which means it fits well.

## 8.38b Obtain R2 for the second-order regression model. Also obtain the coefficient of simple determination for the first-order regression model

### R2 for the second-order regression model

```{r}
glance(model_838)
#Multiple R-squared:  0.6569,	Adjusted R-squared:  0.6507 
```

### obtain the coefficient of simple determination for the first-order regression model

```{r}
#一阶回归
model_838_1st <- lm(num_of_nurses ~ available_facilities,data = data_145)
tidy(model_838_1st)
glance(model_838_1st)
#Multiple R-squared:  0.6139,	Adjusted R-squared:  0.6104 
```

Yes，the addition of the quadratic term in the regression model substantially increased the coefficient of determination.

## 8.38c t-test on the quadratic term

### T test

$$
H_0 : beta_11 = 0
$$

$$
H_1 : beta_11 =!  0
$$

```{r}
alpha <- 0.01
p_value_model838 <- as.numeric(tidy_838[3,4])
if (p_value_model838 < alpha) {
  cat("拒绝原假设，因而beta11不等于0，在方程中显著，不应该丢弃二次项,对应p值为", p_value_model838, "\n")
} else {
  cat("不拒绝原假设，因而beta11等于0，在方程中不显著，应该丢弃二次项,对应p值为", p_value_model838, "\n")
}
```

## 8.40a Fit a first-order regression model with classification predictors

### Data Pre-processing

```{r}
#抽取所需数据
data_840 <- data.frame(infection_risk = data_145$infection_risk,
                       length_of_stay = data_145$length_of_stay,
                             age = data_145$age,
                       Xray = data_145$routine_chest_Xray_ratio,
                        affiliation = data_145$medical_school_affiliation,
                       region = data_145$region)

# 要先把原始数据因子化，level为原始等级，并备注因子化后的label
data_840 <- data_840 %>%  
  mutate(region_f=factor(data_840$region,levels = c(1, 2, 3, 4), labels = c("NE", "NC", "S","W")))

#给region编码
data_840 <- data_840 %>% 
  model.matrix(~region_f -1, .) %>% 
  cbind(data_840, . )  #cbind将哑变量矩阵和原始数据合并

data_840
```

### Regression

```{r}
model_840 <- lm(infection_risk ~ length_of_stay + age + Xray + affiliation +
                  region_fNE + region_fNC + region_fS ,
                data = data_840)
tidy(model_840)
```

## 8.40b Interval estimate the effect of medical afiliation on infeciton risk

```{r}
# 计算参数的98%置信区间
conf_840_98 <- confint(model_840, level = 0.98)
conf_840_98_affiliation <- conf_840_98["affiliation",]
conf_840_98_affiliation
```

## 8.40c Revision model & test on interaction terms

### Add interation terms

```{r}
model_840_inter <- lm(infection_risk ~ length_of_stay + age + Xray + affiliation +
                  region_fNE + region_fNC + region_fS + age : affiliation +
                    Xray : affiliation ,data = data_840)
tidy(model_840_inter)
```

### P-value test

$$
H_0 :beta 8 = beta 9 = 0
$$

$$
H_1：beta8，beta9不全为0
$$

```{r}
alpha <- 0.10
tidy_840_inter <- tidy(model_840_inter)
p_value_model840_age <- as.numeric(tidy_840_inter[9,4])
p_value_model840_Xray <- as.numeric(tidy_840_inter[10,4])
if (p_value_model840_age > alpha && p_value_model840_Xray > alpha ) {
  cat("不拒绝原假设，因而beta8,beta9皆等于0，在方程中不显著，应该丢弃交互项")
} else {
  cat("拒绝原假设，因而beta8,beta9不全等于0，在方程中显著，不应该丢弃交互项")
}
```
